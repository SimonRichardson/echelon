// automatically generated by the FlatBuffers compiler, do not modify

package schema

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type KeyFieldSizeExpiry struct {
	_tab flatbuffers.Table
}

func GetRootAsKeyFieldSizeExpiry(buf []byte, offset flatbuffers.UOffsetT) *KeyFieldSizeExpiry {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &KeyFieldSizeExpiry{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *KeyFieldSizeExpiry) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *KeyFieldSizeExpiry) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *KeyFieldSizeExpiry) Key() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *KeyFieldSizeExpiry) Field() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *KeyFieldSizeExpiry) Size() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *KeyFieldSizeExpiry) MutateSize(n int64) bool {
	return rcv._tab.MutateInt64Slot(8, n)
}

func (rcv *KeyFieldSizeExpiry) Expiry() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *KeyFieldSizeExpiry) MutateExpiry(n int64) bool {
	return rcv._tab.MutateInt64Slot(10, n)
}

func KeyFieldSizeExpiryStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func KeyFieldSizeExpiryAddKey(builder *flatbuffers.Builder, key flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(key), 0)
}
func KeyFieldSizeExpiryAddField(builder *flatbuffers.Builder, field flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(field), 0)
}
func KeyFieldSizeExpiryAddSize(builder *flatbuffers.Builder, size int64) {
	builder.PrependInt64Slot(2, size, 0)
}
func KeyFieldSizeExpiryAddExpiry(builder *flatbuffers.Builder, expiry int64) {
	builder.PrependInt64Slot(3, expiry, 0)
}
func KeyFieldSizeExpiryEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
